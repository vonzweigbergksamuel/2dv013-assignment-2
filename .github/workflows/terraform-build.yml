name: Terraform Build

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: "stage"
        type: choice
        options:
          - stage
          - prod

jobs:
  terraform-build:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Generate env.tfvars
        run: |
          cat > infra/terraform/${{ github.event.inputs.environment }}/env.tfvars <<EOF
          project_id   = "${{ secrets.GCP_PROJECT_ID }}"
          project_name = "${{ secrets.GCP_PROJECT_NAME }}"
          region       = "${{ secrets.GCP_REGION }}"
          devops_service_account_email = "${{ secrets.SERVICE_ACCOUNT_EMAIL }}"
          EOF

      - name: Terraform init
        run: |
          terraform init -backend-config="bucket=${GCP_BUCKET_NAME}" -backend-config="prefix=terraform/${{ github.event.inputs.environment }}"
        working-directory: infra/terraform/${{ github.event.inputs.environment }}
        env:
          GCP_BUCKET_NAME: ${{ vars.GCP_BUCKET_NAME }}

      - name: Terraform plan
        run: terraform plan -out=tfplan -var-file=env.tfvars
        working-directory: infra/terraform/${{ github.event.inputs.environment }}

      - name: Terraform apply
        run: terraform apply -auto-approve tfplan
        working-directory: infra/terraform/${{ github.event.inputs.environment }}

      - name: Capture outputs
        run: terraform output
        working-directory: infra/terraform/${{ github.event.inputs.environment }}
